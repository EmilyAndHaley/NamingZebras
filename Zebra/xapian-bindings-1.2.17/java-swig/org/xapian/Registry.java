/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.5
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.xapian;

public class Registry {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  public Registry(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(Registry obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        XapianJNI.delete_Registry(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public Registry(Registry other) {
    this(XapianJNI.new_Registry__SWIG_0(Registry.getCPtr(other), other), true);
  }

  public Registry() {
    this(XapianJNI.new_Registry__SWIG_1(), true);
  }

  public void registerWeightingScheme(Weight wt) {
    XapianJNI.Registry_registerWeightingScheme(swigCPtr, this, Weight.getCPtr(wt), wt);
  }

  public Weight getWeightingScheme(String name) {
    long cPtr = XapianJNI.Registry_getWeightingScheme(swigCPtr, this, name);
    return (cPtr == 0) ? null : new Weight(cPtr, false);
  }

  public void registerPostingSource(PostingSource source) {
    XapianJNI.Registry_registerPostingSource(swigCPtr, this, PostingSource.getCPtr(source), source);
  }

  public PostingSource getPostingSource(String name) {
    long cPtr = XapianJNI.Registry_getPostingSource(swigCPtr, this, name);
    return (cPtr == 0) ? null : new PostingSource(cPtr, false);
  }

  public void registerMatchSpy(MatchSpy spy) {
    XapianJNI.Registry_registerMatchSpy(swigCPtr, this, MatchSpy.getCPtr(spy), spy);
  }

  public MatchSpy getMatchSpy(String name) {
    long cPtr = XapianJNI.Registry_getMatchSpy(swigCPtr, this, name);
    return (cPtr == 0) ? null : new MatchSpy(cPtr, false);
  }

}

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.5
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace Xapian {

using System;
using System.Runtime.InteropServices;

public class DateValueRangeProcessor : StringValueRangeProcessor {
  private HandleRef swigCPtr;

  internal DateValueRangeProcessor(IntPtr cPtr, bool cMemoryOwn) : base(XapianPINVOKE.DateValueRangeProcessor_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(DateValueRangeProcessor obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~DateValueRangeProcessor() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          XapianPINVOKE.delete_DateValueRangeProcessor(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public DateValueRangeProcessor(uint slot_, bool prefer_mdy_, int epoch_year_) : this(XapianPINVOKE.new_DateValueRangeProcessor__SWIG_0(slot_, prefer_mdy_, epoch_year_), true) {
    if (XapianPINVOKE.SWIGPendingException.Pending) throw XapianPINVOKE.SWIGPendingException.Retrieve();
  }

  public DateValueRangeProcessor(uint slot_, bool prefer_mdy_) : this(XapianPINVOKE.new_DateValueRangeProcessor__SWIG_1(slot_, prefer_mdy_), true) {
    if (XapianPINVOKE.SWIGPendingException.Pending) throw XapianPINVOKE.SWIGPendingException.Retrieve();
  }

  public DateValueRangeProcessor(uint slot_) : this(XapianPINVOKE.new_DateValueRangeProcessor__SWIG_2(slot_), true) {
    if (XapianPINVOKE.SWIGPendingException.Pending) throw XapianPINVOKE.SWIGPendingException.Retrieve();
  }

  public DateValueRangeProcessor(uint slot_, string str_, bool prefix_, bool prefer_mdy_, int epoch_year_) : this(XapianPINVOKE.new_DateValueRangeProcessor__SWIG_3(slot_, str_, prefix_, prefer_mdy_, epoch_year_), true) {
    if (XapianPINVOKE.SWIGPendingException.Pending) throw XapianPINVOKE.SWIGPendingException.Retrieve();
  }

  public DateValueRangeProcessor(uint slot_, string str_, bool prefix_, bool prefer_mdy_) : this(XapianPINVOKE.new_DateValueRangeProcessor__SWIG_4(slot_, str_, prefix_, prefer_mdy_), true) {
    if (XapianPINVOKE.SWIGPendingException.Pending) throw XapianPINVOKE.SWIGPendingException.Retrieve();
  }

  public DateValueRangeProcessor(uint slot_, string str_, bool prefix_) : this(XapianPINVOKE.new_DateValueRangeProcessor__SWIG_5(slot_, str_, prefix_), true) {
    if (XapianPINVOKE.SWIGPendingException.Pending) throw XapianPINVOKE.SWIGPendingException.Retrieve();
  }

  public DateValueRangeProcessor(uint slot_, string str_) : this(XapianPINVOKE.new_DateValueRangeProcessor__SWIG_6(slot_, str_), true) {
    if (XapianPINVOKE.SWIGPendingException.Pending) throw XapianPINVOKE.SWIGPendingException.Retrieve();
  }

  public override uint Apply(SWIGTYPE_p_std__string begin, SWIGTYPE_p_std__string end) {
    uint ret = XapianPINVOKE.DateValueRangeProcessor_Apply(swigCPtr, SWIGTYPE_p_std__string.getCPtr(begin), SWIGTYPE_p_std__string.getCPtr(end));
    if (XapianPINVOKE.SWIGPendingException.Pending) throw XapianPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
